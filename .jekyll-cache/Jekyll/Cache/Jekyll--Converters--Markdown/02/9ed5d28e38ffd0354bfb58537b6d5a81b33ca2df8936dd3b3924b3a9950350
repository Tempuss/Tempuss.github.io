I"x#<p>aka. Cookie VS LocalStorage VS SessionStorage</p>

<h2 id="질문">질문</h2>

<ul>
  <li>JWT 토큰을 어디에 저장해야하는가?</li>
</ul>

<h2 id="대화의-흐름">대화의 흐름</h2>

<ul>
  <li>쿠키에 저장하는게 국룰이다</li>
  <li>요즘엔 웹 스토리지에 저장하는게 표준이다</li>
  <li>스토리지는 세션 스토리지가 정통이다 vs 로컬 스토리지도 모르는 사파 놈들</li>
</ul>

<p>결론적으로 보면 셋중 둘은 다른놈이다(두놈은 형제)</p>

<p>일단 분류를 하자면</p>

<p>Cookie는 HTTP 요청 헤더에 들어가는 속성이고</p>

<p>Local, Session Storage는 HTML5에서 지원하는 클라이언트 Web Storage 종류 중 하나다</p>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Cookie</th>
      <th>Local Storage</th>
      <th>Session Storage</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>데이터 크기</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
    <tr>
      <td>분류</td>
      <td>테스트1</td>
      <td>테스트2</td>
      <td>테스트3</td>
    </tr>
  </tbody>
</table>

<p><a href="https://www.notion.so/0b3b422976ea480aa52890264b8da078">비교표</a></p>

<p>취약점 면에서 보면 양쪽다 비슷하며
개발 목적,기능 혹은 아키텍처 설계에 따라 Cookie VS Web Storage를 골라서 쓰면 된다</p>

<h2 id="서브도메인-테스트-결과">서브도메인 테스트 결과</h2>

<h3 id="localstorage">LocalStorage</h3>

<p><a href="http://tempus.com">tempus.com</a> → <a href="http://test.tempus.com">test.tempus.com</a> 스토리지 접근 가능</p>

<p><a href="http://tempus.com">tempus.com</a> ← test.tempus.com 스토리지 접근 불가</p>

<p><a href="http://tempus.com">tempus.com</a> → <a href="http://test.com">test.com</a> 스토리지 접근 불가</p>

<h3 id="sessionstorage">SessionStorage</h3>

<p><a href="http://tempus.com">tempus.com</a>  → <a href="http://test.tempus.com">test.tempus.com</a> 스토리지 접근 불가</p>

<p><a href="http://tempus.com">tempus.com</a> ← <a href="http://test.tempus.com">test.tempus.com</a> 스토리지 접근 불가</p>

<p><a href="http://tempus.com">tempus.com</a> → <a href="http://test.com">test.com</a> 스토리지 접근 불가</p>

<p><a href="http://tempus.com">tempus.com</a> → tempus.com 스토리지 접근 불가(다른 탭)</p>

<h3 id="cookiedomain-설정-x">Cookie(Domain 설정 X)</h3>

<p><a href="http://tempus.com">tempus.com</a> → <a href="http://test.tempus.com">test.tempus.com</a> 쿠키 접근 불가</p>

<p><a href="http://tempus.com">tempus.com</a> → <a href="http://test.com">te</a>mpus.com 쿠키 접근 가능</p>

<p><a href="http://tempus.com">tempus.com</a> ← <a href="http://test.tempus.com">test.tempus.com</a> 쿠키 접근 불가</p>

<p><a href="http://tempus.com">tempus.com</a> ← <a href="http://test.com">test.com</a> 쿠기 접근 불가</p>

<h3 id="cookiedomain-설정-o-">Cookie(Domain 설정 O )</h3>

<p><a href="http://tempus.com">tempus.com</a> → <a href="http://test.tempus.com">test.tempus.com</a> 쿠키 접근 가능</p>

<p><a href="http://tempus.com">tempus.com</a> ← <a href="http://test.tempus.com">test.tempus.com</a> 쿠키 접근 가능</p>

<p><a href="http://tempus.com">tempus.com</a> ← <a href="http://test.com">test.com</a> 쿠키 접근 불가</p>

<p><a href="http://tempus.com">tempus.com</a> → <a href="http://a.test.tempus.com">a.test.tempus.com</a> 쿠키 접근 가능</p>

<p><a href="http://tempus.com">tempus.com</a> ← <a href="http://a.test.tempus.com">a.test.tempus.com</a> 쿠키 접근 불가</p>

<h3 id="추가-확인-사항">추가 확인 사항</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SOP정책
document.cookie로 변경하면 타 도메인의 쿠키탈취가 가능한가? ⇒ 가능함
subdomain - take over

[a.naver.com](http://a.naver.com) → naver.com → [b.na](http://b.na)ver.com으로 쿠키 를 생성할 수 있는가?

a.naver.com -&gt; naver.com

domain=.naver.com 확인 해보기
</code></pre></div></div>

<p>사용한 코드</p>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="dl">'</span><span class="s1">testValue</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">abc</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">let</span> <span class="nx">value</span> <span class="o">=</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="dl">'</span><span class="s1">testValue</span><span class="dl">'</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span>

<span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="dl">'</span><span class="s1">myCat</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">Tom</span><span class="dl">'</span><span class="p">);</span>
<span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="dl">"</span><span class="s2">myCat</span><span class="dl">"</span><span class="p">);</span>

<span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">user=John; domain=tempus.com</span><span class="dl">"</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">user=John;</span><span class="dl">"</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">abc = www; domain=tempus.com</span><span class="dl">"</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">test=www; domain=a.test.tempus.com</span><span class="dl">"</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="참고">참고</h3>

<ul>
  <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API">https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API</a></li>
  <li><a href="https://velog.io/@ejchaid/localstorage-sessionstorage-cookie%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90">https://velog.io/@ejchaid/localstorage-sessionstorage-cookie의-차이점</a></li>
  <li><a href="https://datatracker.ietf.org/doc/html/rfc2109">https://datatracker.ietf.org/doc/html/rfc2109</a></li>
  <li><a href="https://medium.com/swlh/whats-the-secure-way-to-store-jwt-dd362f5b7914">https://medium.com/swlh/whats-the-secure-way-to-store-jwt-dd362f5b7914</a></li>
  <li><a href="https://velog.io/@0307kwon/JWT%EB%8A%94-%EC%96%B4%EB%94%94%EC%97%90-%EC%A0%80%EC%9E%A5%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C-localStorage-vs-cookie">https://velog.io/@0307kwon/JWT는-어디에-저장해야할까-localStorage-vs-cookie</a></li>
</ul>
:ET